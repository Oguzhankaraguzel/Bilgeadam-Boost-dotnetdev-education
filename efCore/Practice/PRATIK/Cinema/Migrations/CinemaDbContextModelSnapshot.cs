// <auto-generated />
using System;
using Cinema.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Cinema.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    partial class CinemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Cinema.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Popularity")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Aksiyon",
                            Popularity = 10
                        },
                        new
                        {
                            Id = 2,
                            Name = "Macera",
                            Popularity = 8
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fantastik",
                            Popularity = 9
                        },
                        new
                        {
                            Id = 4,
                            Name = "Bilim Kurgu",
                            Popularity = 10
                        },
                        new
                        {
                            Id = 5,
                            Name = "Suç",
                            Popularity = 5
                        },
                        new
                        {
                            Id = 6,
                            Name = "Drama",
                            Popularity = 6
                        },
                        new
                        {
                            Id = 7,
                            Name = "Komedi",
                            Popularity = 10
                        },
                        new
                        {
                            Id = 8,
                            Name = "Romantik",
                            Popularity = 4
                        });
                });

            modelBuilder.Entity("Cinema.Models.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Films");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pirates of the Caribbean: The Curse of the Black Pearl",
                            ReleaseDate = new DateTime(2003, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Name = "The Matrix",
                            ReleaseDate = new DateTime(2003, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Name = "The Godfather",
                            ReleaseDate = new DateTime(1972, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Name = "Yes Man",
                            ReleaseDate = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Name = "Deadpool",
                            ReleaseDate = new DateTime(2016, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 6,
                            Name = "Pride & Prejudice",
                            ReleaseDate = new DateTime(2008, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Cinema.Models.FilmCategory", b =>
                {
                    b.Property<int>("FilmId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.HasKey("FilmId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("FilmCategory");

                    b.HasData(
                        new
                        {
                            FilmId = 1,
                            CategoryId = 1
                        },
                        new
                        {
                            FilmId = 1,
                            CategoryId = 2
                        },
                        new
                        {
                            FilmId = 1,
                            CategoryId = 3
                        },
                        new
                        {
                            FilmId = 2,
                            CategoryId = 1
                        },
                        new
                        {
                            FilmId = 2,
                            CategoryId = 2
                        },
                        new
                        {
                            FilmId = 2,
                            CategoryId = 4
                        },
                        new
                        {
                            FilmId = 3,
                            CategoryId = 1
                        },
                        new
                        {
                            FilmId = 3,
                            CategoryId = 5
                        },
                        new
                        {
                            FilmId = 3,
                            CategoryId = 6
                        },
                        new
                        {
                            FilmId = 4,
                            CategoryId = 3
                        },
                        new
                        {
                            FilmId = 4,
                            CategoryId = 7
                        },
                        new
                        {
                            FilmId = 5,
                            CategoryId = 1
                        },
                        new
                        {
                            FilmId = 5,
                            CategoryId = 3
                        },
                        new
                        {
                            FilmId = 5,
                            CategoryId = 7
                        },
                        new
                        {
                            FilmId = 6,
                            CategoryId = 6
                        },
                        new
                        {
                            FilmId = 6,
                            CategoryId = 8
                        });
                });

            modelBuilder.Entity("Cinema.Models.FilmCategory", b =>
                {
                    b.HasOne("Cinema.Models.Category", "Category")
                        .WithMany("Films")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Cinema.Models.Film", "Film")
                        .WithMany("Categories")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Film");
                });

            modelBuilder.Entity("Cinema.Models.Category", b =>
                {
                    b.Navigation("Films");
                });

            modelBuilder.Entity("Cinema.Models.Film", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
